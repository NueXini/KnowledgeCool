name: Build

on:
  push:
  pull_request:
    paths-ignore:
      - "**.md"

env:
  BUILD_TYPE: Release

jobs:
  linux:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: linux_ARMv7_arm,
              triple: arm-linux-gnueabihf,
              vcpkg: arm-mingw-static,
            }
          - {
              name: linux_ARMv8_arm64_aarch64,
              triple: aarch64-linux-gnu,
              vcpkg: arm64-mingw-static,
            }
          - {
              name: linux_i686_x86_32,
              triple: i686-linux-gnu,
              vcpkg: x86-mingw-static,
            }
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake \
            gcc-12-arm-linux-gnueabihf g++-12-arm-linux-gnueabihf \
            gcc-12-aarch64-linux-gnu g++-12-aarch64-linux-gnu \
            gcc-12-i686-linux-gnu g++-12-i686-linux-gnu \
            gcc-12-i686-linux-gnu g++-12-i686-linux-gnu

      - name: Install LLVM-MINGW
        run: |
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20230504/llvm-mingw-20230504-ucrt-ubuntu-20.04-x86_64.tar.xz
          tar -xf llvm-mingw-20230504-ucrt-ubuntu-20.04-x86_64.tar.xz
          echo "LLVM_BIN_PATH=$(pwd)/llvm-mingw-20230504-ucrt-ubuntu-20.04-x86_64/bin" >> "$GITHUB_ENV"

      - name: Install vcpkg and libraries
        run: |
          git clone https://github.com/Microsoft/vcpkg.git --depth=1
          echo "VCPKG_PATH=$(pwd)/vcpkg" >> "$GITHUB_ENV"
          bash ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
          export VCPKG_DEFAULT_TRIPLET=${{ matrix.config.vcpkg }}
          vcpkg install openssl

      - name: Build project
        run: |
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_PATH }}/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_CXX_COMPILER=${{ env.LLVM_BIN_PATH }}/${{ matrix.config.cxx }} \
            -DCMAKE_CXX_COMPILER_TARGET=${{ matrix.config.triple }} \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=bin/ \
            -DOPENSSL_ROOT_DIR=/usr/local/share/vcpkg/packages/openssl_${{ matrix.config.vcpkg }}
          make

      - name: Upload
        uses: actions/upload-artifact@main
        with:
          name: KnowledgeCool_${{ matrix.config.name }}
          path: build/bin

  windows:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: windows_armv7,
              cxx: armv7-w64-mingw32-clang++,
              vcpkg: arm-mingw-static,
            }
          - {
              name: windows_arm64_armv8_aarch64,
              cxx: aarch64-w64-mingw32-clang++,
              vcpkg: arm64-mingw-static,
            }
          - {
              name: windows_i686_x86_32,
              cxx: i686-w64-mingw32-clang++,
              vcpkg: x86-mingw-static,
            }
          - { name: linux_amd64_x86_64, cxx: clang++, vcpkg: x64-linux-release }
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake

      - name: Install LLVM-MINGW
        run: |
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20230504/llvm-mingw-20230504-ucrt-ubuntu-20.04-x86_64.tar.xz
          tar -xf llvm-mingw-20230504-ucrt-ubuntu-20.04-x86_64.tar.xz
          echo "LLVM_BIN_PATH=$(pwd)/llvm-mingw-20230504-ucrt-ubuntu-20.04-x86_64/bin" >> "$GITHUB_ENV"

      - name: Install vcpkg and libraries
        run: |
          git clone https://github.com/Microsoft/vcpkg.git --depth=1
          echo "VCPKG_PATH=$(pwd)/vcpkg" >> "$GITHUB_ENV"
          bash ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
          export VCPKG_DEFAULT_TRIPLET=${{ matrix.config.vcpkg }}
          vcpkg install openssl

      - name: Build project
        run: |
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_PATH }}/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_CXX_COMPILER=${{ env.LLVM_BIN_PATH }}/${{ matrix.config.cxx }} \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=bin/ \
            -DOPENSSL_ROOT_DIR=/usr/local/share/vcpkg/packages/openssl_${{ matrix.config.vcpkg }}
          make

      - name: Upload
        uses: actions/upload-artifact@main
        with:
          name: KnowledgeCool_${{ matrix.config.name }}
          path: build/bin
